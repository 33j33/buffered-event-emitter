class t{constructor(t,e,s){this.fn=t,this.once=e,this.options=s,(null==s?void 0:s.buffered)&&(this.bucket=[],this.timeoutID=void 0)}}function e(t,e){if(!t||!e)return!1;const s=Object.keys(t),i=Object.keys(e);if(s.length!==i.length)return!1;let n;for(n in t)if(t[n]!==e[n])return!1;return!0}function s(t,s,i){for(let n=0;n<t.length;n++)if(t[n].fn===s&&e(t[n].options,i))return n;return-1}function i(t,e){let s;return new Promise((i=>s=setTimeout((()=>{this.emit(t.eventName,t.data),i(!0)}),e))).finally((()=>{clearTimeout(s)}))}function n(t,e,s){if("emit"===t&&!u.debugStatus.emit||"on"===t&&!u.debugStatus.on||"off"===t&&!u.debugStatus.off)return;if("emit"===t)try{s=JSON.stringify(s)}catch(t){s=`Object with the following keys failed to stringify: ${Object.keys(s).join(",")}`}else["on","off"].includes(t)&&"function"==typeof s&&(s=s.toString());const i=new Date,n=`${i.getHours()}:${i.getMinutes()}:${i.getSeconds()}.${i.getMilliseconds()}`;console.groupCollapsed(`%c[Event Type: ${t} | Event Name: ${e} | ${n}]`,"color: blue; font-size: 12px"),console.log(`%c[Event Data: ${s}}]`,"color: #AD5D4E; font-size: 11px"),console.groupEnd()}var o=function(t,e,s,i){return new(s||(s=Promise))((function(n,o){function u(t){try{l(i.next(t))}catch(t){o(t)}}function r(t){try{l(i.throw(t))}catch(t){o(t)}}function l(t){var e;t.done?n(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(u,r)}l((i=i.apply(t,e||[])).next())}))};class u{constructor(t){var e,s,i;this._events={},this._options={buffered:null!==(e=null==t?void 0:t.buffered)&&void 0!==e&&e,bufferCapacity:null!==(s=null==t?void 0:t.bufferCapacity)&&void 0!==s?s:5,logger:null!==(i=null==t?void 0:t.logger)&&void 0!==i?i:n},this._status="emitting",this._queueEmissions=!0,this._emissionInterval=0,this._queue=[]}emit(t,e){if(!this._events[t]||0===this._events[t].length)return!1;if("paused"===this._status)return this._queueEmissions&&this._queue.push({eventName:t,data:e}),!1;let s=[],i=!1;return this._events[t].forEach((n=>{var o,u;let r=!1;if(n.options.buffered){null===(o=null==n?void 0:n.bucket)||void 0===o||o.push(e);const s=null!==(u=n.options.bufferCapacity)&&void 0!==u?u:this._options.bufferCapacity;(null==n?void 0:n.bucket)&&n.bucket.length>=s&&(n.fn(n.bucket),r=!0,i=!0,this._options.logger("emit",t,n.bucket),n.bucket=[])}else n.fn(e),r=!0,i=!0,this._options.logger("emit",t,e);n.once&&r||s.push(n)})),this._events[t]=s,i}on(e,i,n=this._options){return this._events[e]||(this._events[e]=[]),-1===s(this._events[e],i,n)&&(this._events[e].push(new t(i,!1,n)),this._options.logger("on",e,i),!0)}once(e,i,n=this._options){return this._events[e]||(this._events[e]=[]),-1===s(this._events[e],i,n)&&(this._events[e].push(new t(i,!0,n)),this._options.logger("on",e,i),!0)}off(t,e,i=this._options){let n=s(this._events[t],e,i);return-1!==n&&(this._events[t].splice(n,1),this._options.logger("off",t,e),!0)}flush(t,s,i){let n=!1,o=[];return this._events[t].forEach(((u,r)=>{if(u.options.buffered&&(null==u?void 0:u.bucket)&&u.bucket.length>0){const l=s&&s===u.fn,h=i&&e(i,u.options);(t&&l&&h||t&&!s&&!i)&&(u.fn(u.bucket),n=!0,this._options.logger("emit",t,u.bucket),u.bucket=[],u.once&&o.push(r))}})),this._events[t]=this._events[t].filter(((t,e)=>!o.includes(e))),n}pause(t=!0,e=0){this._queueEmissions=t,this._emissionInterval=e,this._status="paused"}resume(){if(this._status="emitting",this._queueEmissions){if(this._emissionInterval>0){return(()=>o(this,void 0,void 0,(function*(){for(const t of this._queue)yield i.call(this,t,this._emissionInterval)})))()}this._queue.forEach((({eventName:t,data:e})=>{this.emit(t,e)})),this._queue=[]}}offAll(t){var e;return!!(t&&(null===(e=this._events[t])||void 0===e?void 0:e.length)>0)&&(delete this._events[t],this._queue=this._queue.filter((e=>e.eventName!==t)),!0)}cleanup(){this._queue=[],this._events={}}listeners(t){return void 0===t?this._events:this._events[t].map((t=>t.fn))}static enableDebug(t){u.debugStatus=Object.assign(Object.assign({},u.debugStatus),t)}}u.debugStatus={emit:!1,on:!1,off:!1},u.prototype.addListener=u.prototype.on,u.prototype.removeListener=u.prototype.off;export{u as BufferedEventEmitter};
//# sourceMappingURL=bundle.esm.min.mjs.map
