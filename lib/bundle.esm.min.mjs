class e{constructor(e,t,s){this.fn=e,this.once=t,this.options=s,(null==s?void 0:s.buffered)&&(this.bucket=[],this.timeoutID=void 0)}}function t(e,t){if(!e||!t)return!1;const s=Object.keys(e),n=Object.keys(t);if(s.length!==n.length)return!1;let i;for(i in e)if(e[i]!==t[i])return!1;return!0}function s(e,s,n){for(let i=0;i<e.length;i++)if(e[i].fn===s&&t(e[i].options,n))return i;return-1}var n,i,o=function(e,t,s,n){return new(s||(s=Promise))((function(i,o){function u(e){try{l(n.next(e))}catch(e){o(e)}}function r(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(u,r)}l((n=n.apply(e,t||[])).next())}))},u=function(e,t,s,n){if("a"===s&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?n:"a"===s?n.call(e):n?n.value:t.get(e)};class r{constructor(e){var t,s;n.add(this),this._events={},this._defaultListenerOptions={buffered:null!==(t=null==e?void 0:e.buffered)&&void 0!==t&&t,bufferCapacity:null!==(s=null==e?void 0:e.bufferCapacity)&&void 0!==s?s:5},this._status="emitting",this._shouldQueueEmissions=!0,this._emissionInterval=0,this._queue=[]}emit(e,t){if(!this._events[e]||0===this._events[e].length)return!1;if("paused"===this._status)return this._shouldQueueEmissions&&this._queue.push({eventName:e,data:t}),!1;let s=[],n=!1;return this._events[e].forEach((i=>{var o,u;let r=!1;if(i.options.buffered){null===(o=null==i?void 0:i.bucket)||void 0===o||o.push(t);const s=null!==(u=i.options.bufferCapacity)&&void 0!==u?u:this._defaultListenerOptions.bufferCapacity;(null==i?void 0:i.bucket)&&i.bucket.length>=s&&(i.fn(i.bucket),r=!0,n=!0,this.logger("emit",e,i.bucket),i.bucket=[])}else i.fn(t),r=!0,n=!0,this.logger("emit",e,t);i.once&&r||s.push(i)})),this._events[e]=s,n}on(t,n,i=this._defaultListenerOptions){return this._events[t]||(this._events[t]=[]),-1===s(this._events[t],n,i)&&(this._events[t].push(new e(n,!1,i)),this.logger("on",t,n),!0)}once(t,n,i=this._defaultListenerOptions){return this._events[t]||(this._events[t]=[]),-1===s(this._events[t],n,i)&&(this._events[t].push(new e(n,!0,i)),this.logger("on",t,n),!0)}off(e,t,n=this._defaultListenerOptions){let i=s(this._events[e],t,n);return-1!==i&&(this._events[e].splice(i,1),this.logger("off",e,t),!0)}flush(e,s,n){let i=!1,o=[];return this._events[e].forEach(((u,r)=>{if(u.options.buffered&&(null==u?void 0:u.bucket)&&u.bucket.length>0){const l=s&&s===u.fn,h=n&&t(n,u.options);(e&&l&&h||e&&!s&&!n)&&(u.fn(u.bucket),i=!0,this.logger("emit",e,u.bucket),u.bucket=[],u.once&&o.push(r))}})),this._events[e]=this._events[e].filter(((e,t)=>!o.includes(t))),i}pause(e=!0,t=0){this._shouldQueueEmissions=e,this._emissionInterval=t,this._status="paused"}resume(){if(this._status="emitting",this._shouldQueueEmissions){if(this._emissionInterval>0){return(()=>o(this,void 0,void 0,(function*(){for(const e of this._queue)yield u(this,n,"m",i).call(this,e,this._emissionInterval)})))()}this._queue.forEach((({eventName:e,data:t})=>{this.emit(e,t)})),this._queue=[]}}removeListeners(e){var t;return!!(e&&(null===(t=this._events[e])||void 0===t?void 0:t.length)>0)&&(delete this._events[e],this._queue=this._queue.filter((t=>t.eventName!==e)),!0)}cleanup(){this._queue=[],this._events={}}listeners(e){return void 0===e?this._events:this._events[e].map((e=>e.fn))}addListener(e,t,s=this._defaultListenerOptions){return this.on(e,t,s)}removeListener(e,t,s=this._defaultListenerOptions){return this.off(e,t,s)}logger(e,t,s){if("emit"===e&&!r.debugEnabled.emit||"on"===e&&!r.debugEnabled.on||"off"===e&&!r.debugEnabled.off)return;if("emit"===e)try{s=JSON.stringify(s)}catch(e){s=`Object with the following keys failed to stringify: ${Object.keys(s).join(",")}`}else"on"===e&&"function"==typeof s&&(s=s.toString());const n=new Date,i=`${n.getHours()}:${n.getMinutes()}:${n.getSeconds()}.${n.getMilliseconds()}`;console.groupCollapsed(`%c[Event Type: ${e} | Event Name: ${t} | ${i}]`,"color: blue; font-size: 12px"),console.log(`%c[Event Data: ${s}}]`,"color: #AD5D4E; font-size: 11px"),console.groupEnd()}static enableDebug(e){r.debugEnabled=Object.assign(Object.assign({},r.debugEnabled),e)}}n=new WeakSet,i=function(e,t){let s;return new Promise((n=>s=setTimeout((()=>{this.emit(e.eventName,e.data),n(!0)}),t))).finally((()=>{clearTimeout(s)}))},r.debugEnabled={emit:!1,on:!1,off:!1};export{r as BufferedEventEmitter};
//# sourceMappingURL=bundle.esm.min.mjs.map
